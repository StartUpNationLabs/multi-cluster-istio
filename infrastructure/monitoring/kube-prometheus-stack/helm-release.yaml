apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
  labels:
    toolkit.fluxcd.io/tenant: sre-team
spec:
  interval: 60m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: "57.0.0"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 12h
  postRenderers:
    - kustomize:
        patches:
          - target:
              kind: Deployment
            patch: |
              - op: add
                path: /spec/template/spec/dnsConfig
                value:
                  options:
                    - name: ndots
                      value: "1"
  values:
    alertmanager:
      alertmanagerSpec:
        replicas: 1
    prometheus:
      ingress:
        enabled: false

        # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
        # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
        # ingressClassName: nginx

        annotations: { }
        labels: { }

        ## Redirect ingress to an additional defined port on the service
        # servicePort: 8081

        ## Hostnames.
        ## Must be provided if Ingress is enabled.
        ##
        # hosts:
        #   - prometheus.domain.com
        hosts:
          - prometheus.internal.ozeliurs.com

        ## Paths to use for ingress rules - one path should match the prometheusSpec.routePrefix
        ##
        paths:
          - /
        # - /

        ## For Kubernetes >= 1.18 you should specify the pathType (determines how Ingress paths should be matched)
        ## See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#better-path-matching-with-path-types
        # pathType: ImplementationSpecific

        ## TLS configuration for Prometheus Ingress
        ## Secret must be manually created in the namespace
        ##
        tls: [ ]
          # - secretName: prometheus-general-tls
        #   hosts:
        #     - prometheus.example.com

      prometheusSpec:
        replicas: 1
        podMonitorNamespaceSelector:
          any: true
        podMonitorSelector: { }
        podMonitorSelectorNilUsesHelmValues: false
        ruleNamespaceSelector:
          any: true
        ruleSelector: { }
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorNamespaceSelector:
          any: true
        serviceMonitorSelector: { }
        serviceMonitorSelectorNilUsesHelmValues: false


    grafana:

      enabled: true
      replicas: 1


      additionalDataSources: {}
#        - name: loki
#          type: loki
#          url: http://loki-read.monitoring.svc.cluster.local:3100
#          jsonData:
#            tlsSkipVerify: true
#            httpHeaderName1: "X-Scope-OrgID"
#          secureJsonData:
#            httpHeaderValue1: "admins"
      plugins:
        - grafana-piechart-panel
        - grafana-worldmap-panel
        - grafana-clock-panel
        - grafana-simple-json-datasource
        - grafana-kubernetes-app


      # Provision grafana-dashboards-kubernetes
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: 'datacenter'
              orgId: 1
              folder: 'Datacenter'
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/datacenter
            - name: 'traefik'
              orgId: 1
              folder: 'Traefik'
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/traefik
            - name: 'kubernetes'
              orgId: 1
              folder: 'Kubernetes'
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/kubernetes
      dashboards:
        traefik:
          traefik-dashboard:
            gnetId: 17035
            datasource: Prometheus

        kubernetes:
          k8s-system-api-server:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
          k8s-system-coredns:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
          k8s-views-global:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
          k8s-views-namespaces:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
          k8s-views-nodes:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
          k8s-views-pods:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
          k8s-inner-network:
            gnetId: 20707
            revision: 2